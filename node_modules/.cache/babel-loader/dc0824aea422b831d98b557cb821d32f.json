{"remainingRequest":"/home/igeli/vue/turnos-fe/node_modules/babel-loader/lib/index.js!/home/igeli/vue/turnos-fe/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/igeli/vue/turnos-fe/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/igeli/vue/turnos-fe/node_modules/vue-stepper/src/HorizontalStepper.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/igeli/vue/turnos-fe/node_modules/vue-stepper/src/HorizontalStepper.vue","mtime":499162500000},{"path":"/home/igeli/vue/turnos-fe/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/igeli/vue/turnos-fe/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/igeli/vue/turnos-fe/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/igeli/vue/turnos-fe/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport translations from \"./Translations.js\";\nexport default {\n  filters: {\n    translate: function translate(value, locale) {\n      return translations[locale][value];\n    }\n  },\n  props: {\n    locale: {\n      type: String,\n      default: \"en\"\n    },\n    topButtons: {\n      type: Boolean,\n      default: false\n    },\n    steps: {\n      type: Array,\n      default: function _default() {\n        return [{\n          icon: \"mail\",\n          name: \"first\",\n          title: \"Sample title 1\",\n          subtitle: \"Subtitle sample\"\n        }, {\n          icon: \"report_problem\",\n          name: \"second\",\n          title: \"Sample title 2\",\n          subtitle: \"Subtitle sample\"\n        }];\n      }\n    },\n    keepAlive: {\n      type: Boolean,\n      default: true\n    },\n    reset: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      currentStep: {},\n      previousStep: {},\n      nextButton: {},\n      canContinue: false,\n      finalStep: false,\n      keepAliveData: this.keepAlive\n    };\n  },\n  computed: {\n    enterAnimation: function enterAnimation() {\n      if (this.currentStep.index < this.previousStep.index) {\n        return \"animated quick fadeInLeft\";\n      } else {\n        return \"animated quick fadeInRight\";\n      }\n    },\n    leaveAnimation: function leaveAnimation() {\n      if (this.currentStep.index > this.previousStep.index) {\n        return \"animated quick fadeOutLeft\";\n      } else {\n        return \"animated quick fadeOutRight\";\n      }\n    }\n  },\n  methods: {\n    isStepActive: function isStepActive(index, step) {\n      if (this.currentStep.index === index) {\n        return \"activated\";\n      } else {\n        return \"deactivated\";\n      }\n    },\n    activateStep: function activateStep(index) {\n      var back = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (this.steps[index]) {\n        this.previousStep = this.currentStep;\n        this.currentStep = {\n          name: this.steps[index].name,\n          index: index\n        };\n\n        if (index + 1 === this.steps.length) {\n          this.finalStep = true;\n        } else {\n          this.finalStep = false;\n        }\n\n        if (!back) {\n          this.$emit(\"completed-step\", this.previousStep);\n        }\n      }\n\n      this.$emit(\"active-step\", this.currentStep);\n    },\n    nextStepAction: function nextStepAction() {\n      this.nextButton[this.currentStep.name] = true;\n\n      if (this.canContinue) {\n        if (this.finalStep) {\n          this.$emit(\"stepper-finished\", this.currentStep);\n        }\n\n        var currentIndex = this.currentStep.index + 1;\n        this.activateStep(currentIndex);\n      }\n\n      this.canContinue = false;\n      this.$forceUpdate();\n    },\n    nextStep: function nextStep() {\n      var _this = this;\n\n      if (!this.$listeners || !this.$listeners['before-next-step']) {\n        this.nextStepAction();\n      }\n\n      this.canContinue = false;\n      this.$emit(\"before-next-step\", {\n        currentStep: this.currentStep\n      }, function () {\n        var next = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n        _this.canContinue = true;\n\n        if (next) {\n          _this.nextStepAction();\n        }\n      });\n    },\n    backStep: function backStep() {\n      this.$emit(\"clicking-back\");\n      var currentIndex = this.currentStep.index - 1;\n\n      if (currentIndex >= 0) {\n        this.activateStep(currentIndex, true);\n      }\n    },\n    proceed: function proceed(payload) {\n      this.canContinue = payload.value;\n    },\n    changeNextBtnValue: function changeNextBtnValue(payload) {\n      this.nextButton[this.currentStep.name] = payload.nextBtnValue;\n      this.$forceUpdate();\n    },\n    init: function init() {\n      var _this2 = this;\n\n      // Initiate stepper\n      this.activateStep(0);\n      this.steps.forEach(function (step) {\n        _this2.nextButton[step.name] = false;\n      });\n    }\n  },\n  watch: {\n    reset: function reset(val) {\n      var _this3 = this;\n\n      if (!val) {\n        return;\n      }\n\n      this.keepAliveData = false;\n      this.init();\n      this.previousStep = {};\n      this.$nextTick(function () {\n        _this3.keepAliveData = _this3.keepAlive;\n\n        _this3.$emit('reset', true);\n      });\n    }\n  },\n  created: function created() {\n    this.init();\n  }\n};",{"version":3,"sources":["HorizontalStepper.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"stepper-box\">\n        <div class=\"top\">\n            <div class=\"divider-line\" :style=\"{width: `${(100/(steps.length) * (steps.length - 1)) - 10}%`}\"></div>\n            <div class=\"steps-wrapper\">\n                <template v-if=\"topButtons\">\n                    <div v-if=\"currentStep.index > 0\" class=\"stepper-button-top previous\" @click=\"backStep()\">\n                        <i class=\"material-icons\">keyboard_arrow_left</i>\n                    </div>\n                </template>\n                <template v-for=\"(step, index) in steps\">\n                    <div :class=\"['step', isStepActive(index, step)]\" :key=\"index\" :style=\"{width: `${100 / steps.length}%`}\">\n                        <div class=\"circle\">\n                            <i class=\"material-icons md-18\">\n                                {{ (step.completed) ? 'done' : step.icon }}\n                            </i>\n                        </div>\n                        <div class=\"step-title\">\n                            <h4>{{step.title}}</h4>\n                            <h5 class=\"step-subtitle\">{{step.subtitle}}</h5>\n                        </div>\n                    </div>\n                </template>\n                <div v-if=\"topButtons\" :class=\"['stepper-button-top next', !canContinue ? 'deactivated' : '']\" @click=\"nextStep()\">\n                    <i class=\"material-icons\">keyboard_arrow_right</i>\n                </div>\n            </div>\n        </div>\n        <div class=\"content\">\n            <transition :enter-active-class=\"enterAnimation\" :leave-active-class=\"leaveAnimation\" mode=\"out-in\">\n                <!--If keep alive-->\n                <keep-alive v-if=\"keepAliveData\">\n                    <component :is=\"steps[currentStep.index].component\" :clickedNext=\"nextButton[currentStep.name]\" @can-continue=\"proceed\" @change-next=\"changeNextBtnValue\" :current-step=\"currentStep\"></component>\n                </keep-alive>\n                <!--If not show component and destroy it in each step change-->\n                <component v-else :is=\"steps[currentStep.index].component\" :clickedNext=\"nextButton[currentStep.name]\" @can-continue=\"proceed\" @change-next=\"changeNextBtnValue\" :current-step=\"currentStep\"></component>\n            </transition>\n        </div>\n        <div :class=\"['bottom', (currentStep.index > 0) ? '' : 'only-next']\">\n            <div v-if=\"currentStep.index > 0\" class=\"stepper-button previous\" @click=\"backStep()\">\n                <i class=\"material-icons\">keyboard_arrow_left</i>\n                <span>{{ 'back' | translate(locale) }}</span>\n            </div>\n            <div :class=\"['stepper-button next', !canContinue ? 'deactivated' : '']\" @click=\"nextStep()\">\n                <span>{{ (finalStep) ? 'finish' : 'next' | translate(locale) }}</span>\n                <i class=\"material-icons\">keyboard_arrow_right</i>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport translations from \"./Translations.js\";\n\nexport default {\n  filters: {\n    translate: function(value, locale) {\n      return translations[locale][value];\n    }\n  },\n\n  props: {\n    locale: {\n      type: String,\n      default: \"en\"\n    },\n    topButtons: {\n      type: Boolean,\n      default: false\n    },\n    steps: {\n      type: Array,\n      default: function() {\n        return [\n          {\n            icon: \"mail\",\n            name: \"first\",\n            title: \"Sample title 1\",\n            subtitle: \"Subtitle sample\"\n          },\n          {\n            icon: \"report_problem\",\n            name: \"second\",\n            title: \"Sample title 2\",\n            subtitle: \"Subtitle sample\"\n          }\n        ];\n      }\n    },\n    keepAlive: {\n      type: Boolean,\n      default: true\n    },\n    reset: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  data() {\n    return {\n      currentStep: {},\n      previousStep: {},\n      nextButton: {},\n      canContinue: false,\n      finalStep: false,\n      keepAliveData: this.keepAlive\n    };\n  },\n\n  computed: {\n    enterAnimation() {\n      if (this.currentStep.index < this.previousStep.index) {\n        return \"animated quick fadeInLeft\";\n      } else {\n        return \"animated quick fadeInRight\";\n      }\n    },\n    leaveAnimation() {\n      if (this.currentStep.index > this.previousStep.index) {\n        return \"animated quick fadeOutLeft\";\n      } else {\n        return \"animated quick fadeOutRight\";\n      }\n    }\n  },\n\n  methods: {\n    isStepActive(index, step) {\n      if (this.currentStep.index === index) {\n        return \"activated\";\n      } else {\n        return \"deactivated\";\n      }\n    },\n\n    activateStep(index, back = false) {\n      if (this.steps[index]) {\n        this.previousStep = this.currentStep;\n        this.currentStep = {\n          name: this.steps[index].name,\n          index: index\n        };\n\n        if (index + 1 === this.steps.length) {\n          this.finalStep = true;\n        } else {\n          this.finalStep = false;\n        }\n\n        if (!back) {\n          this.$emit(\"completed-step\", this.previousStep);\n        }\n      }\n      this.$emit(\"active-step\", this.currentStep);\n    },\n\n    nextStepAction() {\n      this.nextButton[this.currentStep.name] = true;\n      if (this.canContinue) {\n        if (this.finalStep) {\n          this.$emit(\"stepper-finished\", this.currentStep);\n        }\n        let currentIndex = this.currentStep.index + 1;\n\n        this.activateStep(currentIndex);\n      }\n      this.canContinue = false;\n      this.$forceUpdate();\n    },\n\n    nextStep () {\n\n      if (!this.$listeners || !this.$listeners['before-next-step']) {\n        this.nextStepAction()\n      }\n\n      this.canContinue = false;\n\n      this.$emit(\"before-next-step\", { currentStep: this.currentStep }, (next = true) => {\n        this.canContinue = true;\n        if (next) {\n          this.nextStepAction()\n        }\n      });\n    },\n    backStep() {\n      this.$emit(\"clicking-back\");\n      let currentIndex = this.currentStep.index - 1;\n      if (currentIndex >= 0) {\n        this.activateStep(currentIndex, true);\n      }\n    },\n\n    proceed(payload) {\n      this.canContinue = payload.value;\n    },\n\n    changeNextBtnValue(payload) {\n      this.nextButton[this.currentStep.name] = payload.nextBtnValue;\n      this.$forceUpdate();\n    },\n\n    init() {\n      // Initiate stepper\n      this.activateStep(0);\n      this.steps.forEach(step => {\n        this.nextButton[step.name] = false;\n      });\n    }\n  },\n\n  watch: {\n    reset(val) {\n      if(!val) {\n        return;\n      }\n\n      this.keepAliveData = false;\n\n      this.init();\n      this.previousStep = {};\n\n      this.$nextTick(() => {\n        this.keepAliveData = this.keepAlive;\n        this.$emit('reset', true);\n      });\n\n    }\n  },\n\n  created() {\n    this.init();\n  }\n};\n</script>\n\n<style src=\"./HorizontalStepper.scss\" scoped lang=\"scss\">\n\n</style>\n<style scoped>\n/* fallback */\n@font-face {\n  font-family: \"Material Icons\";\n  font-style: normal;\n  font-weight: 400;\n  src: local(\"Material Icons\"), local(\"MaterialIcons-Regular\"),\n    url(https://fonts.gstatic.com/s/materialicons/v17/2fcrYFNaTjcS6g4U3t-Y5ZjZjT5FdEJ140U2DJYC3mY.woff2)\n      format(\"woff2\");\n}\n\n.material-icons {\n  font-family: \"Material Icons\";\n  font-weight: normal;\n  font-style: normal;\n  font-size: 24px;\n  line-height: 1;\n  letter-spacing: normal;\n  text-transform: none;\n  display: inline-block;\n  white-space: nowrap;\n  word-wrap: normal;\n  direction: ltr;\n  -webkit-font-feature-settings: \"liga\";\n  -webkit-font-smoothing: antialiased;\n}\n</style>\n"],"sourceRoot":"node_modules/vue-stepper/src"}]}