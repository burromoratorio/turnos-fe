{"remainingRequest":"/home/igeli/vue/turnos-fe/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/igeli/vue/turnos-fe/node_modules/vue-stepper/src/HorizontalStepper.vue?vue&type=template&id=3ee86246&scoped=true&","dependencies":[{"path":"/home/igeli/vue/turnos-fe/node_modules/vue-stepper/src/HorizontalStepper.vue","mtime":499162500000},{"path":"/home/igeli/vue/turnos-fe/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/igeli/vue/turnos-fe/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/igeli/vue/turnos-fe/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/igeli/vue/turnos-fe/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n<div class=\"stepper-box\">\n    <div class=\"top\">\n        <div class=\"divider-line\" :style=\"{width: `${(100/(steps.length) * (steps.length - 1)) - 10}%`}\"></div>\n        <div class=\"steps-wrapper\">\n            <template v-if=\"topButtons\">\n                <div v-if=\"currentStep.index > 0\" class=\"stepper-button-top previous\" @click=\"backStep()\">\n                    <i class=\"material-icons\">keyboard_arrow_left</i>\n                </div>\n            </template>\n            <template v-for=\"(step, index) in steps\">\n                <div :class=\"['step', isStepActive(index, step)]\" :key=\"index\" :style=\"{width: `${100 / steps.length}%`}\">\n                    <div class=\"circle\">\n                        <i class=\"material-icons md-18\">\n                            {{ (step.completed) ? 'done' : step.icon }}\n                        </i>\n                    </div>\n                    <div class=\"step-title\">\n                        <h4>{{step.title}}</h4>\n                        <h5 class=\"step-subtitle\">{{step.subtitle}}</h5>\n                    </div>\n                </div>\n            </template>\n            <div v-if=\"topButtons\" :class=\"['stepper-button-top next', !canContinue ? 'deactivated' : '']\" @click=\"nextStep()\">\n                <i class=\"material-icons\">keyboard_arrow_right</i>\n            </div>\n        </div>\n    </div>\n    <div class=\"content\">\n        <transition :enter-active-class=\"enterAnimation\" :leave-active-class=\"leaveAnimation\" mode=\"out-in\">\n            <!--If keep alive-->\n            <keep-alive v-if=\"keepAliveData\">\n                <component :is=\"steps[currentStep.index].component\" :clickedNext=\"nextButton[currentStep.name]\" @can-continue=\"proceed\" @change-next=\"changeNextBtnValue\" :current-step=\"currentStep\"></component>\n            </keep-alive>\n            <!--If not show component and destroy it in each step change-->\n            <component v-else :is=\"steps[currentStep.index].component\" :clickedNext=\"nextButton[currentStep.name]\" @can-continue=\"proceed\" @change-next=\"changeNextBtnValue\" :current-step=\"currentStep\"></component>\n        </transition>\n    </div>\n    <div :class=\"['bottom', (currentStep.index > 0) ? '' : 'only-next']\">\n        <div v-if=\"currentStep.index > 0\" class=\"stepper-button previous\" @click=\"backStep()\">\n            <i class=\"material-icons\">keyboard_arrow_left</i>\n            <span>{{ 'back' | translate(locale) }}</span>\n        </div>\n        <div :class=\"['stepper-button next', !canContinue ? 'deactivated' : '']\" @click=\"nextStep()\">\n            <span>{{ (finalStep) ? 'finish' : 'next' | translate(locale) }}</span>\n            <i class=\"material-icons\">keyboard_arrow_right</i>\n        </div>\n    </div>\n</div>\n",null]}