{"remainingRequest":"/home/igeli/vue/turnos-fe/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/igeli/vue/turnos-fe/node_modules/vue-stepper/src/HorizontalStepper.vue?vue&type=style&index=1&id=3ee86246&scoped=true&lang=css&","dependencies":[{"path":"/home/igeli/vue/turnos-fe/node_modules/vue-stepper/src/HorizontalStepper.vue","mtime":499162500000},{"path":"/home/igeli/vue/turnos-fe/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/igeli/vue/turnos-fe/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/igeli/vue/turnos-fe/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/igeli/vue/turnos-fe/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/igeli/vue/turnos-fe/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* fallback */\n@font-face {\n  font-family: \"Material Icons\";\n  font-style: normal;\n  font-weight: 400;\n  src: local(\"Material Icons\"), local(\"MaterialIcons-Regular\"),\n    url(https://fonts.gstatic.com/s/materialicons/v17/2fcrYFNaTjcS6g4U3t-Y5ZjZjT5FdEJ140U2DJYC3mY.woff2)\n      format(\"woff2\");\n}\n\n.material-icons {\n  font-family: \"Material Icons\";\n  font-weight: normal;\n  font-style: normal;\n  font-size: 24px;\n  line-height: 1;\n  letter-spacing: normal;\n  text-transform: none;\n  display: inline-block;\n  white-space: nowrap;\n  word-wrap: normal;\n  direction: ltr;\n  -webkit-font-feature-settings: \"liga\";\n  -webkit-font-smoothing: antialiased;\n}\n",{"version":3,"sources":["HorizontalStepper.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"HorizontalStepper.vue","sourceRoot":"node_modules/vue-stepper/src","sourcesContent":["<template>\n    <div class=\"stepper-box\">\n        <div class=\"top\">\n            <div class=\"divider-line\" :style=\"{width: `${(100/(steps.length) * (steps.length - 1)) - 10}%`}\"></div>\n            <div class=\"steps-wrapper\">\n                <template v-if=\"topButtons\">\n                    <div v-if=\"currentStep.index > 0\" class=\"stepper-button-top previous\" @click=\"backStep()\">\n                        <i class=\"material-icons\">keyboard_arrow_left</i>\n                    </div>\n                </template>\n                <template v-for=\"(step, index) in steps\">\n                    <div :class=\"['step', isStepActive(index, step)]\" :key=\"index\" :style=\"{width: `${100 / steps.length}%`}\">\n                        <div class=\"circle\">\n                            <i class=\"material-icons md-18\">\n                                {{ (step.completed) ? 'done' : step.icon }}\n                            </i>\n                        </div>\n                        <div class=\"step-title\">\n                            <h4>{{step.title}}</h4>\n                            <h5 class=\"step-subtitle\">{{step.subtitle}}</h5>\n                        </div>\n                    </div>\n                </template>\n                <div v-if=\"topButtons\" :class=\"['stepper-button-top next', !canContinue ? 'deactivated' : '']\" @click=\"nextStep()\">\n                    <i class=\"material-icons\">keyboard_arrow_right</i>\n                </div>\n            </div>\n        </div>\n        <div class=\"content\">\n            <transition :enter-active-class=\"enterAnimation\" :leave-active-class=\"leaveAnimation\" mode=\"out-in\">\n                <!--If keep alive-->\n                <keep-alive v-if=\"keepAliveData\">\n                    <component :is=\"steps[currentStep.index].component\" :clickedNext=\"nextButton[currentStep.name]\" @can-continue=\"proceed\" @change-next=\"changeNextBtnValue\" :current-step=\"currentStep\"></component>\n                </keep-alive>\n                <!--If not show component and destroy it in each step change-->\n                <component v-else :is=\"steps[currentStep.index].component\" :clickedNext=\"nextButton[currentStep.name]\" @can-continue=\"proceed\" @change-next=\"changeNextBtnValue\" :current-step=\"currentStep\"></component>\n            </transition>\n        </div>\n        <div :class=\"['bottom', (currentStep.index > 0) ? '' : 'only-next']\">\n            <div v-if=\"currentStep.index > 0\" class=\"stepper-button previous\" @click=\"backStep()\">\n                <i class=\"material-icons\">keyboard_arrow_left</i>\n                <span>{{ 'back' | translate(locale) }}</span>\n            </div>\n            <div :class=\"['stepper-button next', !canContinue ? 'deactivated' : '']\" @click=\"nextStep()\">\n                <span>{{ (finalStep) ? 'finish' : 'next' | translate(locale) }}</span>\n                <i class=\"material-icons\">keyboard_arrow_right</i>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport translations from \"./Translations.js\";\n\nexport default {\n  filters: {\n    translate: function(value, locale) {\n      return translations[locale][value];\n    }\n  },\n\n  props: {\n    locale: {\n      type: String,\n      default: \"en\"\n    },\n    topButtons: {\n      type: Boolean,\n      default: false\n    },\n    steps: {\n      type: Array,\n      default: function() {\n        return [\n          {\n            icon: \"mail\",\n            name: \"first\",\n            title: \"Sample title 1\",\n            subtitle: \"Subtitle sample\"\n          },\n          {\n            icon: \"report_problem\",\n            name: \"second\",\n            title: \"Sample title 2\",\n            subtitle: \"Subtitle sample\"\n          }\n        ];\n      }\n    },\n    keepAlive: {\n      type: Boolean,\n      default: true\n    },\n    reset: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  data() {\n    return {\n      currentStep: {},\n      previousStep: {},\n      nextButton: {},\n      canContinue: false,\n      finalStep: false,\n      keepAliveData: this.keepAlive\n    };\n  },\n\n  computed: {\n    enterAnimation() {\n      if (this.currentStep.index < this.previousStep.index) {\n        return \"animated quick fadeInLeft\";\n      } else {\n        return \"animated quick fadeInRight\";\n      }\n    },\n    leaveAnimation() {\n      if (this.currentStep.index > this.previousStep.index) {\n        return \"animated quick fadeOutLeft\";\n      } else {\n        return \"animated quick fadeOutRight\";\n      }\n    }\n  },\n\n  methods: {\n    isStepActive(index, step) {\n      if (this.currentStep.index === index) {\n        return \"activated\";\n      } else {\n        return \"deactivated\";\n      }\n    },\n\n    activateStep(index, back = false) {\n      if (this.steps[index]) {\n        this.previousStep = this.currentStep;\n        this.currentStep = {\n          name: this.steps[index].name,\n          index: index\n        };\n\n        if (index + 1 === this.steps.length) {\n          this.finalStep = true;\n        } else {\n          this.finalStep = false;\n        }\n\n        if (!back) {\n          this.$emit(\"completed-step\", this.previousStep);\n        }\n      }\n      this.$emit(\"active-step\", this.currentStep);\n    },\n\n    nextStepAction() {\n      this.nextButton[this.currentStep.name] = true;\n      if (this.canContinue) {\n        if (this.finalStep) {\n          this.$emit(\"stepper-finished\", this.currentStep);\n        }\n        let currentIndex = this.currentStep.index + 1;\n\n        this.activateStep(currentIndex);\n      }\n      this.canContinue = false;\n      this.$forceUpdate();\n    },\n\n    nextStep () {\n\n      if (!this.$listeners || !this.$listeners['before-next-step']) {\n        this.nextStepAction()\n      }\n\n      this.canContinue = false;\n\n      this.$emit(\"before-next-step\", { currentStep: this.currentStep }, (next = true) => {\n        this.canContinue = true;\n        if (next) {\n          this.nextStepAction()\n        }\n      });\n    },\n    backStep() {\n      this.$emit(\"clicking-back\");\n      let currentIndex = this.currentStep.index - 1;\n      if (currentIndex >= 0) {\n        this.activateStep(currentIndex, true);\n      }\n    },\n\n    proceed(payload) {\n      this.canContinue = payload.value;\n    },\n\n    changeNextBtnValue(payload) {\n      this.nextButton[this.currentStep.name] = payload.nextBtnValue;\n      this.$forceUpdate();\n    },\n\n    init() {\n      // Initiate stepper\n      this.activateStep(0);\n      this.steps.forEach(step => {\n        this.nextButton[step.name] = false;\n      });\n    }\n  },\n\n  watch: {\n    reset(val) {\n      if(!val) {\n        return;\n      }\n\n      this.keepAliveData = false;\n\n      this.init();\n      this.previousStep = {};\n\n      this.$nextTick(() => {\n        this.keepAliveData = this.keepAlive;\n        this.$emit('reset', true);\n      });\n\n    }\n  },\n\n  created() {\n    this.init();\n  }\n};\n</script>\n\n<style src=\"./HorizontalStepper.scss\" scoped lang=\"scss\">\n\n</style>\n<style scoped>\n/* fallback */\n@font-face {\n  font-family: \"Material Icons\";\n  font-style: normal;\n  font-weight: 400;\n  src: local(\"Material Icons\"), local(\"MaterialIcons-Regular\"),\n    url(https://fonts.gstatic.com/s/materialicons/v17/2fcrYFNaTjcS6g4U3t-Y5ZjZjT5FdEJ140U2DJYC3mY.woff2)\n      format(\"woff2\");\n}\n\n.material-icons {\n  font-family: \"Material Icons\";\n  font-weight: normal;\n  font-style: normal;\n  font-size: 24px;\n  line-height: 1;\n  letter-spacing: normal;\n  text-transform: none;\n  display: inline-block;\n  white-space: nowrap;\n  word-wrap: normal;\n  direction: ltr;\n  -webkit-font-feature-settings: \"liga\";\n  -webkit-font-smoothing: antialiased;\n}\n</style>\n"]}]}